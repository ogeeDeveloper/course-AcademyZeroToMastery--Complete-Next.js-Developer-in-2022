import Head from "next/head";
import Image from "next/image";
import Banner from "../components/banner";
import Card from "../components/UI/card";
// import CoffeeStoreData from "../utils/coffeeData.json";
import styles from "../styles/Home.module.css";
import {FetchCoffeeStore} from '../lib/coffee-stores'
import useTrackLocation from "../../hooks/use-track-location"
import {useEffect} from "react"

export async function getStaticProps(context){
  const coffeeStores = await FetchCoffeeStore()
  return {
    props: {
      coffeeStores,
    }
  }
}


export default function Home({ coffeeStores }) {
  console.log("props:", coffeeStores);
  const {handleTracLocation,latLong, locationErrorMsg,isFindingLocation} = useTrackLocation()

  useEffect(async() => {
    // fetch coffee store if their is a latlong provided
    if(latLong){
      try{
        const FetchCoffeeStoresByLatLong =await FetchCoffeeStore(latLong,30)
        console.log({FetchCoffeeStoresByLatLong})
        // set coffee stores
      }catch(error){
        // set error
        console.log({error})
      }
    }
  
    return () => {
      second
    }
  }, [latLong])
  

  const HadleOnBanerButtonHandler = () => {
    handleTracLocation()

    console.log({latLong, locationErrorMsg})
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffe Shop Finder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
        // Change status of button if user is using find location
          buttonText={isFindingLocation ? "Loading..." : "View Stores nearby"}
          onButtonHandler={HadleOnBanerButtonHandler}
        />
        {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
        <div className={styles.heroImage}>
          <Image
            src="/static/Header-Image.png"
            width={700}
            height={400}
            alt="The Header image"
          />
        </div>

        {/* Only renders when they are data in the database */}
        {coffeeStores && (
          <div>
            <h2 className={styles.heading2}>Chicago Coffee Stores</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map((coffeeData) => {
                return (
                  <Card
                    key={coffeeData.fsq_id}
                    className={styles.card}
                    title={coffeeData.name}
                    imageUrl={
                      coffeeData.imageURL ||
                      "https://images.unsplash.com/photo-1504627298434-2119d6928e93?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"
                    }
                    href={`/coffee-store/${coffeeData.id}`}
                  />
                );
              })}
            </div>
          </div>
        )}
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
}
